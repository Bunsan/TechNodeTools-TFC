buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// define the properties file
ext.configFile = file "build.prop"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

apply plugin: 'forge'

version = config.mod_version
group = config.group_name
archivesBaseName = "${config.minecraft_version}-${config.mod_id}"

    minecraft {
    version = config.minecraft_version + "-" + config.forge_version 
    runDir = "eclipse"
}

repositories {}
 
dependencies {
	// Forcing version numbers for everything and using NO-NEI WAILA since the "transitive dependency resolution (gradle magic)" is currently borked.
}

sourceSets {
   main {
     java {
       srcDirs = [ 'src/main']
	   exclude '**/resources/'
     }
	 resources {
       srcDirs = [ 'src/resources' ]
	   exclude '**/main'
     }
   }
 }

processResources {
//First we just copy in the mcmod.info file
from(sourceSets.main.resources.srcDirs) {
    include '**/*.info'
    include '**/*.prop'

        // replaces
        expand ([
            'mod_version': project.config.mod_version,
            'tfc_version': project.config.tfc_version,
            'minecraft_version': project.config.minecraft_version,
        ])
    }
     // copy everything else, thats we didnt do before
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.prop'

    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

clean {
  delete "bin"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}